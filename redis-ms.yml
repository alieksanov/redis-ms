# Redis Master - Slave
# https://github.com/alieksanov/redis-ms/blob/master/redis-ms.yml
#
apiVersion: v1
kind: Service
metadata:
  annotations:
    type: "master-slave"
  name: redis-ms
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  clusterIP: None
  selector:
    app: redis
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-ms-config
data:
  redis.conf: |+
    #
    cluster-enabled no
    #
  bootstrap-pod.sh: |+
    #!/bin/sh
    set -e
    redis-server /conf/redis.conf &
    # Wait until redis is ready
    sleep 1
    master="redis-ms-0.redis-ms.default.svc.cluster.local"
    if [[ $(hostname -f) == ${master} ]] ; then
      echo "making myself master"
      redis-cli slaveof no one
    else
      echo "making myself slave to ${master}"
      redis-cli slaveof ${master} 6379
    fi
    wait
  sentinel.conf: |+
    port 26379
    bind 0.0.0.0
    sentinel monitor redis-master redis-ms-0.redis-ms.default.svc.cluster.local 6379 2
    sentinel parallel-syncs redis-master 1
    sentinel down-after-milliseconds redis-master 30000
    sentinel failover-timeout redis-master 90000
  sentinel.sh: |+
    #!/bin/bash
    master="redis-ms-0.redis-ms.default.svc.cluster.local"
    while ! ping -c 1 ${master}; do
      sleep 1
    done
    # Dirty hack against https://github.com/kubernetes/kubernetes/pull/58720
    # TODO proper way to find
    cp /conf/sentinel.conf /tmp/ && redis-sentinel /tmp/sentinel.conf
    #
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: redis-ms
spec:
  serviceName: redis-ms
  replicas: 3
  template:
    metadata:
      labels:
        app: redis
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: redis-ms
        image: redis:3.2.10-alpine
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command:
        - sh
        args:
        - /conf/bootstrap-pod.sh
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 15
          timeoutSeconds: 5
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli -h $(hostname) ping"
          initialDelaySeconds: 20
          periodSeconds: 3
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
        - name: conf
          mountPath: /conf
          readOnly: false

      - name: sentinel
        image: redis:3.2.10-alpine
        command:
        - sh
        args:
        - /conf/sentinel.sh
        volumeMounts:
        - name: conf
          mountPath: /conf 
          readOnly: false
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
    
      volumes:
      - name: conf
        configMap:
          name: redis-ms-config
          defaultMode: 420
